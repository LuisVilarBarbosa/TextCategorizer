[General]
; The text present in the first row of the column with the textual data of interest.
Excel column with text data: Example column
; The text present in the first row of the column with the classifications.
Excel column with Classification data: Classification column
; Give a look at 'https://scikit-learn.org/stable/glossary.html#term-n-jobs' for an explanation on how to choose the number of jobs.
Number of jobs: -1
Preprocessed data file: ./data/preprocessed_data.pkl
; The training mode (only for option --trainer):
; - 'True' (Trains models using the complete dataset.)
; - 'False' (Trains models using a training set and generates statistics using a test set.)
Final training: False
Data directory: ./data

[Preprocessing]
; This boolean indicates whether the preprocessing phase should be performed or not.
; 'True' indicates that the preprocessing phase must be performed and the preprocessed data stored in 'Preprocessed data file'.
; 'False' indicates that the preprocessing phase should be skipped and the preprocessed data loaded from 'Preprocessed data file'.
Preprocess data: True
; Only used if 'Preprocess data' is True and the 'Preprocessed data file' does not exist.
; Indicate '20newsgroups' to use the 20 newsgroups dataset provided by scikit-learn.
Excel file: example_excel_file.xlsx
; The two-letter language code.
MosesTokenizer language code: en
; The complete language code for spell checking: None, en_US, pt_PT or other code present in https://github.com/LibreOffice/dictionaries/tree/master/.
Spell checker language: None

[Feature extraction]
; None or the name of one of the files present inside 'https://raw.githubusercontent.com/nltk/nltk_data/gh-pages/packages/corpora/stopwords.zip'.
NLTK stop words package: english
; A Python script like "text_categorizer/document_updater.py" which has a function with the same declaration and return type.
; As an example, it can be used to change the field of the document that contains the classification.
Document adjustment script: text_categorizer/document_updater.py
; The vectorizer to use.
; Options available:
; - 'CountVectorizer' (https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html)
; - 'HashingVectorizer' (https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html)
; - 'TfidfVectorizer' (https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html)
; - 'DocumentPoolEmbeddings' (https://github.com/zalandoresearch/flair/blob/master/resources/docs/TUTORIAL_4_ELMO_BERT_FLAIR_EMBEDDING.md#bert-embeddings)
; The use of the 'DocumentPoolEmbeddings' option is not recommended because it depends on the Flair library. Please, instead, give a look to 'https://github.com/LuisVilarBarbosa/TextCategorizer-experiments/tree/master/2020-03-09_01_BERT_by_sentence'.
Vectorizer: TfidfVectorizer
; The type of feature reduction that should be performed: None, LDA (Latent Dirichlet Allocation) or MDS (SMACOF).
Feature reduction: None
Remove adjectives: False
; The path of the file that contains CONTO.PT synsets.
; - 'None' disables the substitution of synonyms.
; - 'contopt_0.1_r2_c0.0.txt' (http://ontopt.dei.uc.pt/index.php?sec=contopt) enables the substitution of synonyms.
Synonyms file: None

[Classification]
; A list indicating which classifiers to use.
; The classifiers must be separated by a comma.
; Classifiers available:
; - RandomForestClassifier
; - BernoulliNB
; - MultinomialNB
; - ComplementNB
; - KNeighborsClassifier
; - MLPClassifier
; - LinearSVC
; - DecisionTreeClassifier
; - ExtraTreeClassifier
; - DummyClassifier
; - SGDClassifier
; - BaggingClassifier
Classifiers: RandomForestClassifier,BernoulliNB,MultinomialNB,ComplementNB,KNeighborsClassifier,MLPClassifier,LinearSVC,DecisionTreeClassifier,ExtraTreeClassifier,DummyClassifier,SGDClassifier,BaggingClassifier
; These values 'n' indicate the size of the top-n of classes ordered by probability where the correct class must be placed to be considered a valid solution.
; - 1 indicates that a solution/classification is considered correct if the predicted class matches the correct class.
; - 2 indicates that a solution/classification is considered correct if the correct class matches one of the top-2 predicted classes.
; - ...
Number of probabilities accepted: 1,2,3
; The training and test subsets will be generated if they don't exist and updated only if the force regeneration flag is enabled.
; Give a look at the info about the parameter 'test_size' present in 'https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html' for an explanation on how to choose the test subset size.
; The test subset size can be a value between 0 and 1, so 0.3 corresponds to 30% of the dataset.
Test subset size: 0.3
Force regeneration of training and test subsets: False
; The type of resampling that should be performed: None, RandomOverSample or RandomUnderSample.
Resampling: None
; The weight given to each class: None or balanced.
Class weights: None
; This boolean indicates whether the ROC (Receiver Operating Characteristic) plots should be generated or not.
Generate ROC plots: False
